@{ 
    string viewName = Request.QueryString["viewName"];

    if (string.IsNullOrWhiteSpace(viewName))
    {
        // 預設值
        viewName = "aimenBeach";
    }
}

<style>
    .card .content {
        margin-bottom: 0;
    }

    .card .time {
        color: rgb(112, 112, 112);
    }

    .card-top {
        justify-content: space-between;
    }
</style>
<!-- ##### Single Blog Area Start ##### -->
<div class="single-blog-wrapper section-padding-0-100">
    @Html.Partial($"~/Views/Blog/Articles/{viewName}.cshtml")
</div>
<!-- ##### Single Blog Area End ##### -->
@section Scripts
{
    <script>
        const viewName = '@viewName';

        // 網頁載入完畢執行
        $(document).ready(() => {
            getComments();
        });

        /** 取得單筆留言 */
        function getComments(id) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetComment", "Blog")',
                data: {
                    id: id,
                    viewName: viewName
                },
                success: function (resp) {
                    if (!resp.IsSuccess) {
                        alert(resp.Data);
                        return;
                    }
                    const comment = resp.Data;
                    appendCommentToDOM(comment, true);
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }

        /** 取得多筆留言 */
        function getComments() {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetComments", "Blog")',
                data: {
                    viewName: viewName
                },
                success: function (resp) {
                    if (!resp.IsSuccess) {
                        alert(resp.Data);
                        return;
                    }
                    const comments = resp.Data;
                    for (let i = 0; i < comments.length; i++) {
                        appendCommentToDOM(comments[i], false);
                    }
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }

        /** 新增留言 */
        function addComment() {
            const userName = $('input[name=userName]').val();
            const userEmail = $('input[name=userEmail]').val();
            const content = $('textarea[name=content]').val();
            if (!username || !useremail || !content) {
                $('.alert').show();
                return;
            }
            $('.alert').hide();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("AddComment", "Blog")',
                data: {
                    viewName: viewName,
                    userName: userName,
                    userEmail: userEmail,
                    content: content
                },
                success: function (resp) {
                    if (!resp.IsSuccess) {
                        alert(resp.Data);
                        return;
                    }
                    const comment = resp.Data;
                    appendCommentToDOM(comment, true);
                    $('input[name=userName]').val('');
                    $('input[name=userEmail]').val('');
                    $('textarea[name=content]').val('');
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }

        /** 修改留言 */
        function editComment(id) {
            const userName = $('input[name=userName]').val();
            const userEmail = $('input[name=userEmail]').val();
            const content = $('textarea[name=content]').val();
            if (!username || !useremail || !content) {
                $('.alert').show();
                return;
            }
            $('.alert').hide();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("AddComment", "Blog")',
                data: {
                    id: id,
                    viewName: viewName,
                    userName: userName,
                    userEmail: userEmail,
                    content: content
                },
                success: function (resp) {
                    if (!resp.IsSuccess) {
                        alert(resp.Data);
                        return;
                    }
                    const comment = resp.Data;
                    // 先刪除修改前的
                    $('#comment_' + id).remove();
                    // 再新增修改後的
                    appendCommentToDOM(comment, true);
                    $('input[name=userName]').val('');
                    $('input[name=userEmail]').val('');
                    $('textarea[name=content]').val('');
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }

        /** 刪除留言 */
        function deleteComment(id) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteComment", "Blog")',
                data: {
                    id: id,
                    viewName: viewName
                },
                success: function (resp) {
                    if (!resp.IsSuccess) {
                        alert(resp.Data);
                        return;
                    }
                    $('#comment_' + id).remove();
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }

        /**
         * 插入DOM
         * @@param comment {string} 內容
         * @@param isPrepend {boolean} 是否插入在最上面
         */
        function appendCommentToDOM(comment, isPrepend) {
            const commentsDOM = $('.comments');
            const html = `
    <div class="card m-2" id="comment_${comment.Id}">
      <div class="card-body">
        <div class="card-top d-flex">
          <h5 class="card-title"><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;${comment.UserName}(${comment.UserEmail})</h5>
          <p class="card-text time">${comment.CreatedTime}</p>
        </div>
        <p class="card-text content">${comment.Content}</p>
      </div>
    </div>`;
            if (isPrepend) {
                commentsDOM.prepend(html);
            } else {
                commentsDOM.append(html);
            }
        }
    </script>
}